import numpy as np
import pandas as pd

file_path = "./task.csv"
df = pd.read_csv(file_path, header=0)
print(df)

s = np.array(df['s'][~np.isnan(df['s'])])
nF = np.array(df['F'][~np.isnan(df['F'])])
nQ = np.array(df['Q'][~np.isnan(df['Q'])])
nL = np.array(df['L'][~np.isnan(df['L'])])
nA = np.array(df['A'][~np.isnan(df['A'])])
nE = np.array(df['E'][~np.isnan(df['E'])])

n = len(nQ)
print("N", n)
print(nL)

b = np.zeros(n+1)

if s[0] == 0:
    b[0] = nF[0] + nQ[0] * nL[0] / 2
if s[1] == 0:
    b[n] = nF[n] + (nQ[n - 1] * nL[n - 1]) / 2

for i in range(1, n):
    b[i] = nF[i] + (nQ[i] * nL[i] + nQ[i - 1] * nL[i - 1]) / 2

A = np.zeros([n + 1, n + 1])
EAL = np.zeros(n)

for i in range(n):
    EAL[i] = nE[i] * nA[i] / nL[i]
    A[i][i] += EAL[i]
    A[i][i + 1] += -EAL[i]
    A[i + 1][i] += -EAL[i]
    A[i + 1][i + 1] += EAL[i]

if s[0] == 1:
    A[0][0] = 1
    for i in range(1, n + 1):
        A[0][i], A[i][0] = 0, 0

if s[1] == 1:
    A[n][n] = 1
    for i in range(0, n):
        A[n][i], A[i][n] = 0, 0

print('\n[A] =\n', A)
print("\n{b}=\n", b)
delta = np.linalg.solve(A, b)
print('\ndelta =\n', delta)
# ------------------------------------------------------------------------------

U = np.zeros((n, 2))

for i in range(n):
    U[i][0], U[i][1] = delta[i], delta[i + 1]

Ux = np.zeros((n, 2))


def fUx(i, X):
    return U[i][0] + X / nL[i] * (U[i][1] - U[i][0]) + nQ[i] / 2 / EAL[i] * X * (1 - X / nL[i])


for i in range(n):
    Ux[i][0] = fUx(i, 0)
    Ux[i][1] = fUx(i, nL[i])

N = np.zeros((2, n))


def fNx(i, X):
    return EAL[i] * (U[i][1] - U[i][0]) + nQ[i] * nL[i] / 2 * (1 - 2 * X / nL[i])


Nx = np.zeros((n, 2))
for i in range(n):
    Nx[i][0] = fNx(i, 0)
    Nx[i][1] = fNx(i, nL[i])

sigma = np.zeros((n, 2))
np.copyto(sigma, Nx)
for i in range(n):
    sigma /= nA[i]

file_path_out = "./result.csv"

dfile = pd.DataFrame(columns=['Nx(0)', 'Nx(L)', 'Ux(0)', 'Ux(L)', 'σ(0)', 'σ(L)'])
stack = np.hstack((Nx, Ux, sigma))
for i in range(n):
    dfile.loc[i] = stack[i]

dfile.to_csv(file_path_out, index=False)
